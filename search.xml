<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>pirate-gold</title>
      <link href="/2018/08/22/pirate-gold/"/>
      <url>/2018/08/22/pirate-gold/</url>
      <content type="html"><![CDATA[]]></content>
      
      
    </entry>
    
    <entry>
      <title>The Blue-Eyed Islanders Puzzle</title>
      <link href="/2018/08/22/puzzle/"/>
      <url>/2018/08/22/puzzle/</url>
      <content type="html"><![CDATA[<p>Hey, this is my second post. Recently I saw a very interesting puzzle online while reading the <a href="https://www.amazon.com/Practical-Guide-Quantitative-Finance-Interviews/dp/1438236662" target="_blank" rel="noopener">A Practical Guide for Quantitative Finance Interview</a> (also high recommended by <a href="https://quantnet.com/whats-new/" target="_blank" rel="noopener">QuantNet</a>). I find the puzzle amazing and potentially to be a quant interview question (though a little bit tough but intuitive once we find the pattern), so I feel like sharing with you.</p><p>The puzzle itself is proposed by <a href="https://en.wikipedia.org/wiki/Terence_Tao" target="_blank" rel="noopener">Terence Tao</a> in his blog, mathematician in UCLA, Fields Price winner. It is a hard one requiring serious logic induction. Ready? Let’s get your brain teased! XD</p><h3 id="Question"><a href="#Question" class="headerlink" title="Question"></a>Question</h3><blockquote><p>There is an island upon which a tribe resides. The tribe consists of 1000 people, 100 of which are blue-eyed and 900 of which are brown-eyed. Yet, their religion forbids them to know their own eye color, or even to discuss the topic; thus, <u><b>one resident can see the eye colors of all other residents but has no way of discovering his own </b></u>(there are no reflective surfaces). If a tribesperson does discover his or her own eye color, then their religion compels them to commit ritual suicide at noon the following day in the village square for all to witness. All the tribespeople are highly logical, highly devout, and they all know that each other is also highly logical and highly devout.</p><p>One day, a blue-eyed foreigner visits to the island and wins the complete trust of the tribe. One evening, he addresses the entire tribe to thank them for their hospitality. However, not knowing the customs, the foreigner makes the mistake of mentioning eye color in his address, mentioning in his address <u><b>“how unusual it is to see another blue-eyed person like myself in this region of the world”.</b></u></p><p>What effect, if anything, does this faux pas have on the tribe?</p><footer><strong>@Terence Tao,</strong><cite><a href="http://www.math.ucla.edu/~tao/blue.html" target="_blank" rel="noopener">www.math.ucla.edu/~tao/blue.html</a></cite></footer></blockquote><h3 id="First-Glimpse"><a href="#First-Glimpse" class="headerlink" title="First Glimpse"></a>First Glimpse</h3><p>The puzzle looks like a paradise in the first glimpse, there are two argues as the following:</p><ul><li><p><strong>Argument I:</strong> The foreigner has no effect, because his comments do not tell the tribe anything that they do not already know (everyone in the tribe can already see that there are several blue-eyed people in their tribe).</p></li><li><p><strong>Argument II:</strong> 100 days after the address, all the blue eyed people commit suicide. This is proven as a special case of the Proposition</p><blockquote><p><strong>Proposition:</strong> Suppose that the tribe had n blue-eyed people for some positive integer n. Then n days after the traveller’s address, all n blue-eyed people commit suicide.</p></blockquote></li></ul><h3 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h3><p>The key to solve this puzzle is to understand the logic concept of <code>Common Knowledge</code>, the first intuition tells us that the foreigner tells something that everyone knows, so it should have no effect. While the concept <strong>Everyone knows</strong> does not imply <strong>Everyone knows that every knows</strong>, you see the difference?</p><blockquote><p><strong>Common Knowledge</strong> is a special kind of knowledge for a group of agents. There is common knowledge of p in a group of agents G when all the agents in G know p, they all know that they know p, they all know that they all know that they know p, and so on ad infinitum.</p><footer><strong>@wikipedia:</strong><cite><a href="https://en.wikipedia.org/wiki/Common_knowledge_(logic)" target="_blank" rel="noopener">en.wikipedia.org/wiki/Common_knowledge_(logic)</a></cite></footer></blockquote><p>We all heard the story of <a href="http://www.andersen.sdu.dk/vaerk/hersholt/TheEmperorsNewClothes_e.html" target="_blank" rel="noopener">The Emperor’s New Clothes</a> from Hans Christian Andersen, which turns out to be a typical example to illustrate the concept: In the story, everyone does not see the new clothes on the emperor while no body knows whether others can see or not, so the <u><strong>can’t see the new clothes</strong></u> is not a common knowledge in the context, only after one child shouts out “That emperor is naked!”, the knowledge spreads out among people, it becomes a common knowledge since <u><strong>now everyone knows that they all can’t see the new clothes.</strong></u></p><p>Before we enter into the formal proof, think about it carefully and try to solve it by your own!</p><ul><li><strong>TIP:</strong> start from the base case where only 1 or 2 out of 1000 have(s) blue eyes.</li></ul><h3 id="Proof"><a href="#Proof" class="headerlink" title="Proof"></a>Proof</h3><p>Now let’s start from the simplest case, what if only 1 or 2 out of 1000 islanders have(s) blue eyes?</p><ul><li><p><strong>Case 1:</strong> If you consider the case of just one blue-eyed person on the island, you can show that he obviously commits suicide the first night, because he knows he’s the only one the foreigner could be talking about. He looks around and sees no one else, and knows he should commit suicide. So: <strong>[THEOREM 1]: If there is one blue-eyed person, and thus commits suicide on the next day</strong></p></li><li><p><strong>Case 2:</strong> If there are two blue-eyed people, they will each look at the other. They will each realize that <strong>“if I don’t have blue eyes [HYPOTHESIS 1]</strong>, then that guy is the only blue-eyed person”. And if he’s the only person, by <strong>THEOREM 1</strong> he will leave tonight.” They each wait and see, and when neither of them commit suicide the first night, each realizes “My <strong>HYPOTHESIS 1</strong> was incorrect. I must have blue eyes.” And each commits suicide the second night.</p></li><li><p><strong>General:</strong> This induction can continue all the way up to <strong>THEOREM 99</strong>, which each person on the island in the problem will of course know immediately. Then they’ll each wait 99 days, see that the rest of the group hasn’t committed suicide anywhere, and on the 100th night, they all kill themselves.</p></li></ul><p><strong>When there are n people who have blue eyes, then they should all commit suicide on the n-th night</strong>. We can prove that rigorously by <a href="https://en.wikipedia.org/wiki/Mathematical_induction" target="_blank" rel="noopener">Mathematical Induction</a>, <u><strong>but to give an “guessed” answer and underlying analysis is fairly enough if this was an interview question.</strong></u></p><p>I found a version of Mathematical Induction by formal logic syntax on Reddit <a href="https://www.reddit.com/r/AskReddit/comments/khhpl/reddit_what_is_your_favorite_riddle/c2kdlr6/" target="_blank" rel="noopener">Here</a>, and post it as below:</p><blockquote><p><b>==BASE CASE==</b><br>TO PROVE: F(1) = G(1). If exactly one person had blue eyes, he would leave on day one</p><p>1 GIVEN at least one person on the island has blue eyes (from the oracle, who speaks only truth)<br>2 BASE HYPOTHESIS exactly one person has blue eyes<br>3 BY EXCLUSION AND 2 The person with blue eyes sees no one else with blue eyes<br>4 BY ELIMINATION AND 3 AND 1 The person with blue eyes concludes that he must have blue eyes<br>5 QED: If exactly one person had blue eyes, he would leave on day one. F(1) = G(1)</p><p><b>==INDUCTIVE CASE==</b><br>TO PROVE: If F(n) = G(n) then F(n+1) = G(n+1). (If n people have blue eyes, they will leave on day n) implies (If n+1 people have blue eyes, they will leave on day n+1)</p><p>6 GIVEN No one leaves until he knows he has blue eyes<br>7 ASSUMING n+1 people have blue eyes<br>8 INDUCTIVE HYPOTHESIS n people with blue eyes will leave on day n<br>9 BY EXCLUSION AND 7 Each person with blue eyes will see n people with blue eyes<br>10 BY 6 AND 7 AND 8 No one leaves on day n<br>11 BY 8 AND 10 The number of people with blue eyes cannot be n<br>12 BY ELIMINATION AND 9 AND 11 Each person with blue eyes reasons that he must have blue eyes (to make the total not equal to n)<br>13 QED: (If n people have blue eyes, they will leave on day n) implies (If n+1 people have blue eyes, they will leave on day n+1). If F(n) = G(n) then F(n+1) = G(n+1)</p><p><b>==INDUCTIVE CONCLUSION==</b><br>14 BY INDUCTION AND 5 AND 13 x people with blue eyes will leave on day x</p></blockquote><h3 id="Variants"><a href="#Variants" class="headerlink" title="Variants"></a>Variants</h3><p>The question has two amazing variants originally posted by Terence Tao:</p><ul><li><p><b>Variant 1: </b>If the foreigner realizes his mistake on the next day his speech, is there a way the foreigner can reduce the number of casualties?</p></li><li><p><b>Variant 2: </b>What if the foreigner only realizes his mistake several days after his speech?</p></li></ul><p>The variants will not be discussed in this post, while I may include them in the future.</p><h3 id="Further-Thoughts"><a href="#Further-Thoughts" class="headerlink" title="Further Thoughts"></a>Further Thoughts</h3><p>A few words could bring such dramatic power, this is the power of <b>Sharing Knowledge</b>. Such concept could also be introduced into an interesting topic:</p><p><strong>Why We Need to Express Love (“我们为什么要表白?”).</strong><br></p><blockquote><ul><li><p>Before we express love, we feel that we like this girl and also from the interaction, we believe that this girl is also interested in me, the same feeling comes from the girl as well. <strong>But this is not</strong> <code>Common Knowledge</code>, i.e. we love each other deeply while neither of us knows the other’s heart.</p></li><li><p>After we express love, <strong>“We love each other” becomes common knowledge, (i.e. we both know we love each other)</strong>, so we end up together happily.</p></li></ul></blockquote><p></p><p>I will also post puzzles I find interesting in the future, they provide wonderful samples to prepare Quant interview questions and themselves are intriguing. If you like this post, share it with your friends! XD</p>]]></content>
      
      
        <tags>
            
            <tag> Logic </tag>
            
            <tag> Quant Interview </tag>
            
            <tag> Puzzle </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Python Setup for Quantitative Research</title>
      <link href="/2018/08/17/python-setup/"/>
      <url>/2018/08/17/python-setup/</url>
      <content type="html"><![CDATA[<p>At the moment, all our projects are built on Python. Before we formally enter into any specific topic or model buildings, I think it might be necessary to write a post, help those <b>who are new to Python </b>to quickly set up the environment for further analysis, introduce some libraries and learning resources for further reading. Later in the future, I will also post relevant set-up for C++.</p><h3 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h3><p>Python is a high-level OOP (Object-Oriented Programming) language and an elegant toolkit for data science, with so many open source libraries. We can easily inherit from their modules and classes for our own implementation. Though Python can do anything, <b>we will focused on the data science, data analysis, model training, ML/DL now.</b></p><p>In this post, I will help you setup your local Python environment and introduce libraries for the financial machine learning/time series project. Please note that I won’t teach the basic data-structure like <code>list</code>, <code>dict</code>, <code>tuple</code>, <code>set</code>, <code>str</code> or basic algorithm logic like for-loop, while-loop.</p><p><b>If you are totally new to Python</b>, I would strongly recommend you take online courses on <a href="https://www.dataquest.io/" target="_blank" rel="noopener">dataquest.io</a> or <a href="https://www.datacamp.com/" target="_blank" rel="noopener">datacamp</a>, both websites allow you to learn from the lectures and implement on the web-based Python kernel, so you can read and code in the same time with focus on the coding and logic instead of those annoying programming setting in the first place. <b>(For this topic or anything around data science/data analysis, master <a href="">pandas</a> would be highly-recommended)</b></p><p>Those convenient learning resources is also one of the pros of Python. I didn’t find any such website for C++ or Java yet (which allows you to code near around). Another online course on <a href="https://www.giraffeacademy.com/" target="_blank" rel="noopener">Giraffe Academy</a> is nice, check it out if you like (actually I learned to write this post on <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a> from Mike XD)</p><h3 id="Setup-Python-Environment"><a href="#Setup-Python-Environment" class="headerlink" title="Setup Python Environment"></a>Setup Python Environment</h3><p>Programming environment is important to your project, we will need <a href="https://anaconda.org/" target="_blank" rel="noopener">Anaconda</a> environment manager to setup our environment for the research.</p><p>First, make sure you download the latest version <a href="">Here</a>, then install it and open Anaconda Prompt, use <code>conda</code> in command line, reference: <a href="https://conda.io/docs/_downloads/conda-cheatsheet.pdf" target="_blank" rel="noopener">Anaconda cheatsheet</a></p><p>Use the following command code in Anaconda Prompt to create an new environment and install packages:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ conda create -n &lt;my_env&gt; python=3.6</span><br></pre></td></tr></table></figure><p>Then you can activate your environment and install packages using:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ activate &lt;my_env&gt;</span><br><span class="line">$ conda install pandas</span><br></pre></td></tr></table></figure><p>Now we are all good, install the necessary packages like pandas, numpy, scipy, sklearn, matplotlib and so on, with <code>conda</code> or <code>pip</code> in your environment.</p><h3 id="IDE"><a href="#IDE" class="headerlink" title="IDE"></a>IDE</h3><p>Many IDEs are available for Python, here I only recommend the most powerful two - Jupyter Notebook/Lab and Pycharm.</p><p><a href="http://jupyter.org/" target="_blank" rel="noopener">Jupyter Notebook</a> (Now new version <a href="https://github.com/jupyterlab/jupyterlab" target="_blank" rel="noopener">Jupyter Lab</a> available!)<br>Awesome light-weight IDE which allows us to build elegant markdown with code cell by cell. You can write in <code>HTML</code> or <code>LATEX</code> to customize your page, export them in to html page or PDF!</p><img src="/2018/08/17/python-setup/jupyter.PNG"><p><br></p><img src="/2018/08/17/python-setup/matplotlib3.PNG"><p><br></p><center><small><p style="color:gray">Here is an snippet of my project in notebook</p></small></center><p><a href="https://www.jetbrains.com/pycharm/" target="_blank" rel="noopener">Pycharm</a><br>An very professional IDE for Python development, powerful version control with Git, effective in teamwork. Actually, In the <a href="https://engineering.nyu.edu/research-innovation/nyu-tandon-future-labs" target="_blank" rel="noopener">NYU Future Labs</a> where I worked, I don’t see any other Python development IDE are used among all start-up tech companies other than Pycharm.</p><img src="/2018/08/17/python-setup/pycharm2.PNG"><p><br><br>The combination of those two toolkits would prepare us for advanced quantitative research.<br><b>A typical workflow for a Quant as the following: </b>you develop modules, write classes and build packages, play with big data, run the experiments on Pycharm (which nicely supports multi-processing), then analyze the result/data/model-output effectively (with lots of visualization) on Jupyter notebook, show them to your boss.</p><h3 id="Open-Source-Libraries"><a href="#Open-Source-Libraries" class="headerlink" title="Open Source Libraries"></a>Open Source Libraries</h3><p>Python can do anything! In the following, I list some common though very powerful packages that I strongly recommend you to install in the first place for statistical analysis, ML/DL.</p><p>As the posts go along, I will introduce more are more packages which are focused on specific jobs such as feature extraction, feature selection, time series prediction, etc.</p><h4 id="Data"><a href="#Data" class="headerlink" title="Data"></a>Data</h4><p><a href="https://pandas.pydata.org/pandas-docs/stable/" target="_blank" rel="noopener">Numpy</a><br>The first nice library to deal with data, nice data-structure which supports high-dimention data, often used for other advanced libraries such as Sklearn, Keras, etc.</p><p><a href="https://pandas.pydata.org/pandas-docs/stable/" target="_blank" rel="noopener">Pandas</a><br>The most important library in our project of all time! Pandas could be used to deal with ANY excel-liked data, with powerful data-structure such as <code>pd.DataFrame</code> and <code>pd.Series</code> and hundreds of easy-to-use, C++ speed level functions to transform your table. Supports <code>datetime</code> object which is especially powerful to deal with time series data.</p><p>You will probably find the most common two import lines in almost every code snippet online:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br></pre></td></tr></table></figure><h4 id="Machine-Learning-Deep-Learning"><a href="#Machine-Learning-Deep-Learning" class="headerlink" title="Machine Learning/Deep Learning"></a>Machine Learning/Deep Learning</h4><p><a href="http://scikit-learn.org/stable/" target="_blank" rel="noopener">Sklearn</a><br>The most powerful and easy-to-use machine learning library, includes feature scaling, feature decomposition, metrics analysis, cross-validation, model training for both regression, clustering, classification. Forecasting could be made in 3 lines of code. e.g.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.ensemble <span class="keyword">import</span> RandomForestRegressor</span><br><span class="line"></span><br><span class="line">model = RandomForestRegressor()</span><br><span class="line">model.fit(X_train, y_train)</span><br><span class="line">model.predict(X_test)</span><br></pre></td></tr></table></figure><p>Well-organized code structure allows us to inherit from sk-learn class for the implementations on our own.</p><p><a href="https://www.tensorflow.org/" target="_blank" rel="noopener">Tensorflow</a>, <a href="https://keras.io/" target="_blank" rel="noopener">Keras</a><br>Advanced deep learning libraries to deal with, I will implement RNN, LSTM on sequential model later in the posts.</p><h4 id="Data-Visualization"><a href="#Data-Visualization" class="headerlink" title="Data Visualization"></a>Data Visualization</h4><p><a href="https://matplotlib.org/" target="_blank" rel="noopener">Matplotlib</a><br>Underlying library to deal with plotting in Python. You can build beautiful plots and nicely aligned profile. The basic structure is <code>ax</code> and <code>figure</code>, which represents single plot and plot background (blackboard).</p><p><a href="https://seaborn.pydata.org/" target="_blank" rel="noopener">Seaborn</a><br>Library based on Matplotlib with some very nice plot type for statistical analysis, e.g. heatmap, which can be used to plot by rank/decile/correlation to capture important pattern , we will discuss in the later posts.</p><img src="/2018/08/17/python-setup/matplotlib.PNG"><center><small><p style="color:gray">an customized plot from one of my project</p></small></center><h4 id="Others"><a href="#Others" class="headerlink" title="Others"></a>Others</h4><p><a href="https://tsfresh.readthedocs.io/en/latest/" target="_blank" rel="noopener">tsfresh</a><br>A very handful light-weighted library to extract features in a time series, by single one line code, we could extract 794 features including fast-fourier transformation, wavelet transformation, linear trend, quantiles transformation, etc. We will go into details on this library later.</p><p><a href="https://www.statsmodels.org/stable/index.html" target="_blank" rel="noopener">statsmodels</a><br>Library to deal with statistical models, I used to build ARIMA, GARCH type, EWMA, etc. models with this package, similar to what is been used in <a href="https://www.r-project.org/" target="_blank" rel="noopener">R</a>, both have very nice model summary profile.</p><p><a href="https://pyflux.readthedocs.io/en/latest/" target="_blank" rel="noopener">pyflux</a><br>Library focused on time series modeling, similar to statsmodels.tsa.</p><p><a href="https://facebook.github.io/prophet/docs/quick_start.html" target="_blank" rel="noopener">fbprophet</a><br>Library to help you automatically forecast time series from history by facebook, especially useful for traditional time series model with seasonal pattern.</p><h3 id="Advices"><a href="#Advices" class="headerlink" title="Advices"></a>Advices</h3><p><b>Documentations and source code </b>are of great importance to learn a new language, you will find yourself diving into docs. or source code when facing with trying to solve a specific problem or to learn new packages. <a href="https://stackoverflow.com/" target="_blank" rel="noopener">Stack-Overflow</a> is an awesome community for programming, when you have no idea how to implement the issue or run into errors, you can simply google your problem, the first a few pop-ups are often from someone asking the same questions in Stack-Overflow. Check it before you decide to solve by yourself, it will save you lots of time.</p><p>You will also need to learn <a href="https://github.com/" target="_blank" rel="noopener">Github</a> structure when you are using Pycharm. Basically speaking, Github is a cloud where you can manage version-control of your personal/teamwork projects by uploading <code>push</code> and downloading <code>pull</code> your code, creating new <code>branch</code>, etc. You can clone any open-source code to your local environment or store and share your own code by this logic on Github.</p><img src="/2018/08/17/python-setup/documentation.PNG"><center><small><p style="color:gray">Documentation page of <code>tsfresh</code></p></small></center><h3 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h3><p>Now you have already setup the basic environment as a Quant. From the next post, we will dive into real problems and try to solve them by quantitative analysis on Python. Thank you for reading. If you like this post, share it with your friends: )</p>]]></content>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Build a Machine Learning Pipeline for Financial Time Series Forecasting#0</title>
      <link href="/2018/08/17/machine-learning-pipeline/"/>
      <url>/2018/08/17/machine-learning-pipeline/</url>
      <content type="html"><![CDATA[<p>Time series forecasting has always been one of the most fansinating topic in quantitative finance. Today, with the assistance of new technology such as Machine Learning and Deep Learning and alternative features from image recognition and NLP, etc. We are able to build more powerful machine than ever before to learn patterns from historical data, which finally provides us the ability to forecast the future.</p><p>In this series, we will learn to build a basic framework, which is a standard pipeline to implement financial machine learning in time series prediction.</p><p>My grateful to Shawn and Lei from <a href="http://www.alphavertex.co/" target="_blank" rel="noopener">AlphaVertex Inc.</a> who teach me and inspire me in the first place. Now I am exciting to share basic knowledge and grow together with you. : )</p><h1 id="Chapter-0-Preparation"><a href="#Chapter-0-Preparation" class="headerlink" title="Chapter 0: Preparation"></a>Chapter 0: Preparation</h1><h2 id="Programming-Language-Python"><a href="#Programming-Language-Python" class="headerlink" title="Programming Language: Python"></a>Programming Language: Python</h2>]]></content>
      
      
    </entry>
    
    <entry>
      <title>Hello World</title>
      <link href="/2018/08/16/hello-world/hello-world/"/>
      <url>/2018/08/16/hello-world/hello-world/</url>
      <content type="html"><![CDATA[<p>Hey, whats’up! Welcome to my new blog! This is my very first post. Today is 2018-08-17, the Chinese Valumtimes Day, just been through an exciting summer with <a href="http://www.alphavertex.co/" target="_blank" rel="noopener">AlphaVertex Inc.</a>, an NYC based start-up FinTech (Financial Technology) company using AI Technology to inspire investment in the community.</p><p>Thanks a lot to Shawn and Lei, who teach me, inspire me and lead me to this brand new area.</p><h3 id="Future-Plan"><a href="#Future-Plan" class="headerlink" title="Future Plan"></a>Future Plan</h3><p>In the future, I will update this blog from time to time, contents covering from my learning notes on Machine Learning, Deep Learning, C++ and Linux, to other staff like Quant Interview Preparation, Sharing Project, Summary of Internship, etc. along with my new thoughts.</p><p>Peace and Love! See you in the future.</p><h3 id="Ending"><a href="#Ending" class="headerlink" title="Ending"></a>Ending</h3><p>时间停留在2018年8月17日，我踩着七夕的尾巴结束了一个穿梭在NJ Turnpike上5000英里的夏天。</p><p>未来的路还很远，在这个博客里我会不定期的更新Financial Machine Learning，Deep Learning, C++的学习笔记。其他内容涵盖Quant面试准备和Personal Project的更进，作为成长笔记，记录一个新晋Quant的点点滴滴。</p>]]></content>
      
      
    </entry>
    
  
  
</search>
